<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.neoteric.starter</groupId>
        <artifactId>neo-starter-parent</artifactId>
        <version>0.1.0-SNAPSHOT</version>
        <relativePath>../neo-starter-parent</relativePath>
    </parent>

    <packaging>pom</packaging>
    <artifactId>neo-starter-parent-neoteric</artifactId>

    <name>Neo Starter Neoteric Parent</name>
    <description>Neo Starter Parent Neoteric - Microservice starter used in Neoteric</description>
    <url>http://github.com/neoteric-eu/neo-starters</url>
    <organization>
        <name>Neoteric</name>
        <url>http://www.neoteric.eu</url>
    </organization>

    <scm>
        <url>http://github.com/neoteric-eu/neo-starters</url>
        <connection>scm:git:git://github.com/neoteric-eu/neo-starters.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/neoteric-eu/neo-starters.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <issueManagement>
        <system>Github</system>
        <url>https://github.com/neoteric-eu/neo-starters/issues</url>
    </issueManagement>

    <properties>
        <docker.repository.host>docker.neoteric.eu</docker.repository.host>
        <docker.repository.url>https://docker.neoteric.eu</docker.repository.url>
        <docker.repository.serverId>docker-repository</docker.repository.serverId>
        <docker.image.initialPrefix>neoteric/</docker.image.initialPrefix>

        <distributionManagement.repository>http://naga.neoteric.eu:8081/nexus/content/repositories/releases/
        </distributionManagement.repository>
        <distributionManagement.repository.snapshots>
            http://naga.neoteric.eu:8081/nexus/content/repositories/snapshots/
        </distributionManagement.repository.snapshots>
    </properties>

    <build>
        <resources>
            <resource>
                <directory>src/main/docker</directory>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}/docker</targetPath>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/application.yml</include>
                    <include>**/application.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>**/application.yml</exclude>
                    <exclude>**/application.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.github.danielflower.mavenplugins</groupId>
                    <artifactId>gitlog-maven-plugin</artifactId>
                    <configuration>
                        <fullGitMessage>true</fullGitMessage>
                        <excludeCommiters>
                            <commiter>jenkins</commiter>
                        </excludeCommiters>
                        <dateFormat>yyyy-MM-dd</dateFormat>
                        <markdownChangeLogFilename>CHANGELOG.md</markdownChangeLogFilename>
                        <generateMarkdownChangeLog>true</generateMarkdownChangeLog>
                        <generateJSONChangeLog>false</generateJSONChangeLog>
                        <generatePlainTextChangeLog>false</generatePlainTextChangeLog>
                        <excludeCommitsPattern>.*\b(updating poms for branch|merging.*into)\b.*</excludeCommitsPattern>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <classifier>exec</classifier>
                        <requiresUnpack>
                            <dependency>
                                <groupId>io.swagger</groupId>
                                <artifactId>swagger-jaxrs</artifactId>
                            </dependency>
                        </requiresUnpack>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <configuration>
                        <serverId>${docker.repository.serverId}</serverId>
                        <registryUrl>${docker.repository.url}</registryUrl>
                    </configuration>
                    <executions>
                        <execution>
                            <id>buildDocker</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                            <configuration>
                                <pushImage>true</pushImage>
                                <imageName>
                                    ${docker.repository.host}/${docker.image.initialPrefix}${project.artifactId}:${project.version}
                                </imageName>
                                <dockerDirectory>${project.build.directory}/docker</dockerDirectory>
                                <resources>
                                    <resource>
                                        <targetPath>/</targetPath>
                                        <directory>${project.build.directory}</directory>
                                        <include>${project.build.finalName}-exec.jar</include>
                                    </resource>
                                    <resource>
                                        <targetPath>/</targetPath>
                                        <directory>${project.build.directory}/classes</directory>
                                        <include>*.yml</include>
                                    </resource>
                                    <resource>
                                        <targetPath>/</targetPath>
                                        <directory>${project.build.directory}/classes</directory>
                                        <include>*.xml</include>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>tagLatest</id>
                            <phase>package</phase>
                            <goals>
                                <goal>tag</goal>
                            </goals>
                            <configuration>
                                <pushImage>true</pushImage>
                                <image>
                                    ${docker.repository.host}/${docker.image.initialPrefix}${project.artifactId}:${project.version}
                                </image>
                                <newName>${docker.repository.host}/${docker.image.initialPrefix}${project.artifactId}:latest
                                </newName>
                                <forceTags>true</forceTags>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>external.atlassian.jgitflow</groupId>
                    <artifactId>jgitflow-maven-plugin</artifactId>
                    <configuration>
                        <pushFeatures>true</pushFeatures>
                        <pushHotfixes>true</pushHotfixes>
                        <pushReleases>true</pushReleases>
                        <enableSshAgent>true</enableSshAgent>
                        <flowInitContext>
                            <masterBranchName>master</masterBranchName>
                            <developBranchName>development</developBranchName>
                            <featureBranchPrefix>feature-</featureBranchPrefix>
                            <releaseBranchPrefix>release-</releaseBranchPrefix>
                            <hotfixBranchPrefix>hotfix-</hotfixBranchPrefix>
                            <versionTagPrefix>${project.artifactId}-</versionTagPrefix>
                        </flowInitContext>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-artifacts</id>
                            <phase>package</phase>
                            <goals>
                                <goal>attach-artifact</goal>
                            </goals>
                            <configuration>
                                <artifacts>
                                    <artifact>
                                        <file>changelog.html</file>
                                        <type>html</type>
                                        <classifier>changelog</classifier>
                                    </artifact>
                                </artifacts>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>add-changelog-to-git</id>
                            <phase>package</phase>
                            <goals>
                                <goal>add</goal>
                                <goal>checkin</goal>
                            </goals>
                            <configuration>
                                <basedir>./</basedir>
                                <includes>CHANGELOG.md, changelog.html</includes>
                                <message>Add changelog</message>
                                <pushChanges>true</pushChanges>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.danielflower.mavenplugins</groupId>
                <artifactId>gitlog-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Releases</name>
            <url>${distributionManagement.repository}</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Snapshots</name>
            <url>${distributionManagement.repository.snapshots}</url>
        </snapshotRepository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.danielflower.mavenplugins</groupId>
                        <artifactId>gitlog-maven-plugin</artifactId>
                        <configuration>
                            <outputDirectory>${project.basedir}</outputDirectory>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-scm-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>releaseStarters</id>
            <distributionManagement>
                <repository>
                    <id>neoteric-os-releases</id>
                    <name>Neoteric OpenSource releases</name>
                    <url>http://naga.neoteric.eu:8081/nexus/content/repositories/os-releases/</url>
                </repository>
                <snapshotRepository>
                    <id>neoteric-os-snapshots</id>
                    <name>Neoteric OpenSource snapshots</name>
                    <url>http://naga.neoteric.eu:8081/nexus/content/repositories/os-snapshots/</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
    </profiles>

</project>